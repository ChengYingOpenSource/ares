<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cy.ares.dao.core.dal.mapper.Ares2ConfMapper">

    <resultMap id="BaseResultMap" type="com.cy.ares.dao.common.model.Ares2ConfDO">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
        <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
        <result column="namespace_code" jdbcType="VARCHAR" property="namespaceCode" />
        <result column="app_code" jdbcType="VARCHAR" property="appCode" />
        <result column="env_code" jdbcType="VARCHAR" property="envCode" />
        <result column="cluster_code" jdbcType="VARCHAR" property="clusterCode" />
        <result column="group" jdbcType="VARCHAR" property="group" />
        <result column="data_id" jdbcType="VARCHAR" property="dataId" />
        <result column="content" jdbcType="VARCHAR" property="content" />
        <result column="content_size" jdbcType="INTEGER" property="contentSize" />
        <result column="content_type" jdbcType="VARCHAR" property="contentType" />
        <result column="compress" jdbcType="TINYINT" property="compress" />
        <result column="digest" jdbcType="VARCHAR" property="digest" />
        <result column="encrypt" jdbcType="TINYINT" property="encrypt" />
        <result column="desc" jdbcType="VARCHAR" property="desc" />
        <result column="trace_id" jdbcType="VARCHAR" property="traceId" />
        <result column="rollback_from_huid" jdbcType="VARCHAR" property="rollbackFromHuid" />
        <result column="create_user" jdbcType="BIGINT" property="createUser" />
        <result column="modify_user" jdbcType="BIGINT" property="modifyUser" />
        <result column="create_user_account" jdbcType="VARCHAR" property="createUserAccount" />
        <result column="modify_user_account" jdbcType="VARCHAR" property="modifyUserAccount" />
    </resultMap>

    <sql id="Query_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                <trim prefix="(" prefixOverrides="and" suffix=")">
                    <foreach collection="criteria.criteria" item="criterion">
                        <choose>
                            <when test="criterion.noValue">
                                and ${criterion.condition}
                            </when>
                            <when test="criterion.singleValue">
                                and ${criterion.condition} #{criterion.value}
                            </when>
                            <when test="criterion.betweenValue">
                                and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                            </when>
                            <when test="criterion.listValue">
                                and ${criterion.condition}
                            <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                #{listItem}
                            </foreach>
                            </when>
                        </choose>
                    </foreach>
                </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Query_Where_Clause">
        <where>
            <foreach collection="query.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List">
        `id`,`gmt_create`,`gmt_modified`,`namespace_code`,`app_code`,`env_code`,`cluster_code`,`group`,`data_id`,`content`,`content_size`,`content_type`,`compress`,`digest`,`encrypt`,`desc`,`trace_id`,`rollback_from_huid`,`create_user`,`modify_user`,`create_user_account`,`modify_user_account`
    </sql>

    <select id="selectByQuery" parameterType="com.cy.ares.dao.common.query.Ares2ConfQuery" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
            from ares2_conf
        <if test="_parameter != null">
            <include refid="Query_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <include refid="MysqlDialectSuffix" />
    </select>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select <include refid="Base_Column_List" /> from ares2_conf where id = #{id,jdbcType=BIGINT}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from ares2_conf where id = #{id,jdbcType=BIGINT}
    </delete>

    <delete id="deleteByQuery" parameterType="com.cy.ares.dao.common.query.Ares2ConfQuery">
        delete from ares2_conf
        <if test="_parameter != null">
            <include refid="Query_Where_Clause" />
        </if>
    </delete>

    <insert id="insertSelective" parameterType="com.cy.ares.dao.common.model.Ares2ConfDO">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into ares2_conf
        <trim prefix="(" suffix=")" suffixOverrides=",">
            gmt_create,gmt_modified,
            <if test="namespaceCode != null">
                namespace_code,
            </if>
            <if test="appCode != null">
                app_code,
            </if>
            <if test="envCode != null">
                env_code,
            </if>
            <if test="clusterCode != null">
                cluster_code,
            </if>
            <if test="group != null">
                group,
            </if>
            <if test="dataId != null">
                data_id,
            </if>
            <if test="content != null">
                content,
            </if>
            <if test="contentSize != null">
                content_size,
            </if>
            <if test="contentType != null">
                content_type,
            </if>
            <if test="compress != null">
                compress,
            </if>
            <if test="digest != null">
                digest,
            </if>
            <if test="encrypt != null">
                encrypt,
            </if>
            <if test="desc != null">
                `desc`,
            </if>
            <if test="traceId != null">
                trace_id,
            </if>
            <if test="rollbackFromHuid != null">
                rollback_from_huid,
            </if>
            <if test="createUser != null">
                create_user,
            </if>
            <if test="modifyUser != null">
                modify_user,
            </if>
            <if test="createUserAccount != null">
                create_user_account,
            </if>
            <if test="modifyUserAccount != null">
                modify_user_account,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            now(),now(),
            <if test="namespaceCode != null">
                #{namespaceCode,jdbcType=VARCHAR},
            </if>
            <if test="appCode != null">
                #{appCode,jdbcType=VARCHAR},
            </if>
            <if test="envCode != null">
                #{envCode,jdbcType=VARCHAR},
            </if>
            <if test="clusterCode != null">
                #{clusterCode,jdbcType=VARCHAR},
            </if>
            <if test="group != null">
                #{group,jdbcType=VARCHAR},
            </if>
            <if test="dataId != null">
                #{dataId,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                #{content,jdbcType=VARCHAR},
            </if>
            <if test="contentSize != null">
                #{contentSize,jdbcType=INTEGER},
            </if>
            <if test="contentType != null">
                #{contentType,jdbcType=VARCHAR},
            </if>
            <if test="compress != null">
                #{compress,jdbcType=TINYINT},
            </if>
            <if test="digest != null">
                #{digest,jdbcType=VARCHAR},
            </if>
            <if test="encrypt != null">
                #{encrypt,jdbcType=TINYINT},
            </if>
            <if test="desc != null">
                #{desc,jdbcType=VARCHAR},
            </if>
            <if test="traceId != null">
                #{traceId,jdbcType=VARCHAR},
            </if>
            <if test="rollbackFromHuid != null">
                #{rollbackFromHuid,jdbcType=VARCHAR},
            </if>
            <if test="createUser != null">
                #{createUser,jdbcType=BIGINT},
            </if>
            <if test="modifyUser != null">
                #{modifyUser,jdbcType=BIGINT},
            </if>
            <if test="createUserAccount != null">
                #{createUserAccount,jdbcType=VARCHAR},
            </if>
            <if test="modifyUserAccount != null">
                #{modifyUserAccount,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <select id="countByQuery" parameterType="com.cy.ares.dao.common.query.Ares2ConfQuery" resultType="java.lang.Integer">
        select count(*) from ares2_conf
        <if test="_parameter != null">
            <include refid="Query_Where_Clause" />
        </if>
    </select>

    <update id="updateByQuerySelective" parameterType="map">
        update ares2_conf
        <set>
            gmt_modified=now(),
            <if test="record.namespaceCode != null">
                namespace_code = #{record.namespaceCode,jdbcType=VARCHAR},
            </if>
            <if test="record.appCode != null">
                app_code = #{record.appCode,jdbcType=VARCHAR},
            </if>
            <if test="record.envCode != null">
                env_code = #{record.envCode,jdbcType=VARCHAR},
            </if>
            <if test="record.clusterCode != null">
                cluster_code = #{record.clusterCode,jdbcType=VARCHAR},
            </if>
            <if test="record.group != null">
                group = #{record.group,jdbcType=VARCHAR},
            </if>
            <if test="record.dataId != null">
                data_id = #{record.dataId,jdbcType=VARCHAR},
            </if>
            <if test="record.content != null">
                content = #{record.content,jdbcType=VARCHAR},
            </if>
            <if test="record.contentSize != null">
                content_size = #{record.contentSize,jdbcType=INTEGER},
            </if>
            <if test="record.contentType != null">
                content_type = #{record.contentType,jdbcType=VARCHAR},
            </if>
            <if test="record.compress != null">
                compress = #{record.compress,jdbcType=TINYINT},
            </if>
            <if test="record.digest != null">
                digest = #{record.digest,jdbcType=VARCHAR},
            </if>
            <if test="record.encrypt != null">
                encrypt = #{record.encrypt,jdbcType=TINYINT},
            </if>
            <if test="record.desc != null">
                `desc` = #{record.desc,jdbcType=VARCHAR},
            </if>
            <if test="record.traceId != null">
                trace_id = #{record.traceId,jdbcType=VARCHAR},
            </if>
            <if test="record.rollbackFromHuid != null">
                rollback_from_huid = #{record.rollbackFromHuid,jdbcType=VARCHAR},
            </if>
            <if test="record.createUser != null">
                create_user = #{record.createUser,jdbcType=BIGINT},
            </if>
            <if test="record.modifyUser != null">
                modify_user = #{record.modifyUser,jdbcType=BIGINT},
            </if>
            <if test="record.createUserAccount != null">
                create_user_account = #{record.createUserAccount,jdbcType=VARCHAR},
            </if>
            <if test="record.modifyUserAccount != null">
                modify_user_account = #{record.modifyUserAccount,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Query_Where_Clause" />
        </if>
    </update>

    <update id="updateByQuery" parameterType="map">
        update ares2_conf
        <set>
        namespace_code = #{record.namespaceCode,jdbcType=VARCHAR},
        app_code = #{record.appCode,jdbcType=VARCHAR},
        env_code = #{record.envCode,jdbcType=VARCHAR},
        cluster_code = #{record.clusterCode,jdbcType=VARCHAR},
        group = #{record.group,jdbcType=VARCHAR},
        data_id = #{record.dataId,jdbcType=VARCHAR},
        content = #{record.content,jdbcType=VARCHAR},
        content_size = #{record.contentSize,jdbcType=INTEGER},
        content_type = #{record.contentType,jdbcType=VARCHAR},
        compress = #{record.compress,jdbcType=TINYINT},
        digest = #{record.digest,jdbcType=VARCHAR},
        encrypt = #{record.encrypt,jdbcType=TINYINT},
        `desc` = #{record.desc,jdbcType=VARCHAR},
        trace_id = #{record.traceId,jdbcType=VARCHAR},
        rollback_from_huid = #{record.rollbackFromHuid,jdbcType=VARCHAR},
        create_user = #{record.createUser,jdbcType=BIGINT},
        modify_user = #{record.modifyUser,jdbcType=BIGINT},
        create_user_account = #{record.createUserAccount,jdbcType=VARCHAR},
        modify_user_account = #{record.modifyUserAccount,jdbcType=VARCHAR},
        gmt_modified = now()
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Query_Where_Clause" />
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.cy.ares.dao.common.model.Ares2ConfDO">
        update ares2_conf
        <set>
            gmt_modified=now(),
            <if test="namespaceCode != null">
                namespace_code = #{namespaceCode,jdbcType=VARCHAR},
            </if>
            <if test="appCode != null">
                app_code = #{appCode,jdbcType=VARCHAR},
            </if>
            <if test="envCode != null">
                env_code = #{envCode,jdbcType=VARCHAR},
            </if>
            <if test="clusterCode != null">
                cluster_code = #{clusterCode,jdbcType=VARCHAR},
            </if>
            <if test="dataId != null">
                data_id = #{dataId,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=VARCHAR},
            </if>
            <if test="contentSize != null">
                content_size = #{contentSize,jdbcType=INTEGER},
            </if>
            <if test="contentType != null">
                content_type = #{contentType,jdbcType=VARCHAR},
            </if>
            <if test="compress != null">
                compress = #{compress,jdbcType=TINYINT},
            </if>
            <if test="digest != null">
                digest = #{digest,jdbcType=VARCHAR},
            </if>
            <if test="encrypt != null">
                encrypt = #{encrypt,jdbcType=TINYINT},
            </if>
            <if test="desc != null">
                `desc` = #{desc,jdbcType=VARCHAR},
            </if>
            <if test="traceId != null">
                trace_id = #{traceId,jdbcType=VARCHAR},
            </if>
            <if test="rollbackFromHuid != null">
                rollback_from_huid = #{rollbackFromHuid,jdbcType=VARCHAR},
            </if>
            <if test="createUser != null">
                create_user = #{createUser,jdbcType=BIGINT},
            </if>
            <if test="modifyUser != null">
                modify_user = #{modifyUser,jdbcType=BIGINT},
            </if>
            <if test="createUserAccount != null">
                create_user_account = #{createUserAccount,jdbcType=VARCHAR},
            </if>
            <if test="modifyUserAccount != null">
                modify_user_account = #{modifyUserAccount,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <sql id="MysqlDialectSuffix">
        <if test="pageOffset &gt;= 0 and pageSize &gt; 0">
            <![CDATA[ LIMIT #{pageOffset,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER} ]]>
        </if>
    </sql>

</mapper>
